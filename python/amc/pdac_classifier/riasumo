#!/usr/bin/env python3
from datetime import datetime
from pathlib import Path
import pandas as pd

from cenai_core import cenai_path
from cenai_core.pandas_helper import from_json

class Summarizer:
    def __init__(self):
        self._output_dir = cenai_path(
            "output/amc"
        )

        self._evaluation_df = pd.DataFrame()
        self._result_df = pd.DataFrame()
        self._pivot_df = pd.DataFrame()

    def _merge_data(self) -> None:
        datastore_dir = self._output_dir / "datastore"

        for json_file in datastore_dir.rglob("*.json"):
            evaluation_df, result_df, *_ = from_json(json_file)

            self._evaluation_df = pd.concat(
                [self._evaluation_df, evaluation_df], axis=0,
            )

            self._result_df = pd.concat(
                [self._result_df, result_df], axis=0,
            )
            
        self._evaluation_df = self._evaluation_df.reset_index(drop=True)
        self._result_df = self._result_df.reset_index(drop=True)

        time_df = self._result_df.groupby("run_id", as_index=False)["소요시간"].mean()

        self._evaluation_df = pd.merge(
            self._evaluation_df,
            time_df,
            on="run_id",
            how="outer",
        )

        self._evaluation_df["dataset"] = self._evaluation_df.apply(
            lambda field: "_".join(field["run_id"].split("_")[:2]),
            axis=1
        )

        self._deviate_df = self._result_df[~self._result_df["hit"]]

    def _analyze_data(self) -> None:
        pivot_df = pd.pivot_table(
            self._evaluation_df,
            values=["hit_ratio", "소요시간"],
            index=["model", "algorithm"],
            columns=["dataset"],
            aggfunc=["mean", "std"],
            fill_value=0,
        )

        time = datetime.now().strftime("%Y-%m-%dT%H:%M")
        excel_dir = cenai_path("output/amc/excel")
        excel_file = excel_dir / f"summary_{time}.xlsx"

        excel_dir.mkdir(parents=True, exist_ok=True)

        with pd.ExcelWriter(excel_file) as writer:
            pivot_df.to_excel(writer, sheet_name="Summary")
            self._result_df.to_excel(writer, sheet_name="Total RUN List")
            self._deviate_df.to_excel(writer, sheet_name="Miss RUN List")


    def __call__(self) -> None:
        self._merge_data()
        self._analyze_data()


if __name__ == "__main__":
    summarizer = Summarizer()
    summarizer()
